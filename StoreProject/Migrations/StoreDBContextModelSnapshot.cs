// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreProject.DataContext;

namespace StoreProject.Migrations
{
    [DbContext(typeof(StoreDBContext))]
    partial class StoreDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StoreProject.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<byte[]>("Img1");

                    b.Property<byte[]>("Img2");

                    b.Property<byte[]>("Img3");

                    b.Property<string>("LongDescription")
                        .IsRequired();

                    b.Property<long?>("OwnerId");

                    b.Property<decimal>("Price");

                    b.Property<string>("ShortDescription")
                        .IsRequired();

                    b.Property<int>("State");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("UserId");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = 1L, Date = new DateTime(2019, 5, 30, 13, 30, 39, 711, DateTimeKind.Local), LongDescription = "test", OwnerId = 3L, Price = 33m, ShortDescription = "TEST1", State = 0, Title = "title", UserId = 2L }
                    );
                });

            modelBuilder.Entity("StoreProject.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1L, BirthDate = new DateTime(2019, 5, 30, 13, 30, 39, 707, DateTimeKind.Local), Email = "user@gmail.com", FirstName = "Ofir", LastName = "Somech", Password = "123456", UserName = "user@gmail.com" },
                        new { Id = 2L, BirthDate = new DateTime(2019, 5, 30, 13, 30, 39, 710, DateTimeKind.Local), Email = "avi@gmail.com", FirstName = "Avi", LastName = "Levi", Password = "123456", UserName = "avi@gmail.com" },
                        new { Id = 3L, BirthDate = new DateTime(2019, 5, 30, 13, 30, 39, 710, DateTimeKind.Local), Email = "dani@gmail.com", FirstName = "Dani", LastName = "Cohen", Password = "123456", UserName = "dani@gmail.com" }
                    );
                });

            modelBuilder.Entity("StoreProject.Models.Product", b =>
                {
                    b.HasOne("StoreProject.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");

                    b.HasOne("StoreProject.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
